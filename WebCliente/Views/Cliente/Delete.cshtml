@model WebCliente.Models.Cliente

@{
    ViewData["Title"] = "Delete";
}

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Cliente</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Nome)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Nome)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Logotipo)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Logotipo)
        </dd>
    </dl>
    
    @* <form asp-action="Delete">
        <input type="hidden" asp-for="ClienteId" />
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-action="Index">Back to List</a>
    </form> *@
    <form id="deleteForm" asp-action="Delete">
        <input type="hidden" asp-for="ClienteId" />
        <button id="deleteButton" class="btn btn-danger">Delete</button> |
        <a asp-action="Index">Back to List</a>
    </form>
</div>

<script>
    document.getElementById("deleteButton").addEventListener("click", function (event) {
        event.preventDefault();
        if (confirm("Deseja realmente deltar esse registro?")) {
            fetch("/api/Clientes/" + @Model.ClienteId, {
                method: "DELETE"
            })
                .then(response => {
                    if (response.ok) {
                        window.location.href = "/Clientes/Index"; // Redireciona para a lista
                    } else {
                        alert("Error: Could not delete the client.");
                    }
                });
        }
    });
</script>